<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAABBZJREFUSEutVX1MlHUcfwBBOjBOBDZf8FjUncchgYcsVATFl5VosQYVOjfTimhN
        UxuukN1Ia6M32FxjBeXmeqPp+iOazXVZ93493APo3UWBcjItlsfhnQGbrE/f38Pvlughkn22357dPZ/v
        9/N9/T3CTJgYvlYFyQvvkzUQ04tgT8iBI2Uleoqexvin3+Bqh/FxxgMQLRvMBr89tbdioLgSPwqpsMXp
        YJ+XC3tSHuz301OxHOaoDFiEDEycNuNGaKyEm90dpMySJ3qTV8ISo4ZDqaezIsLRw56YB6OQiNHj7cBw
        cA03vzN8u2u39mdugDVWC0fyTc5Z5Ik5lMnDcFAmNwsZBQUgdlOloOJuIiN06ox29I0PqCwLyXm+7ICV
        xEm1lyijrkVrIKUVwqHIlsXCIqxkPakF8B1t2UgiUdzdVNCLGF9Dc6UUqyGnkxEy5530dCn1Q+6yPY6h
        1nbxwr6j9vOPbLsqLqCMWNOZyPx8nBUWAEY7EAqlcZdTwdKDy0PEZNlANpybBUmzIXjJ0FTDaTKIe9D3
        /KHr4jxWslzi62GJUmOgci/6qg2RBQIdFlXgvU9gEtJlA1vCcrgz1sFb/uLHnDIFI1bp1U5tadARnzXJ
        j9fBm70F3avKpxE42aHyv9UCs7BUrr91jhr9pTsQtEkRBRhMwuJvXVR/1mgbPd2ZpejO2TRNiS5cUeHk
        GbnBTllAg76SKowYbREFqEwFoqbE4wxnEJeFX1c/g75N1dP2QDn0+ddfWYU0OKkHrIHupcXwlj0bWaD/
        SvvFddthoaFgAj9R5mONbcCp7yILMAyU12iHinbQDiyTjUQaR5OwRLz8dmstBVDMacJA3fvrpdwtvWzC
        HPLEUQbCIvzR9uWHxFNw2u0ISBeVvbsPfOQQlsCppCxoocT4bPxeuhODOw9YrEp9/VnFg/W/6DZ3n6O5
        Z4PA+mWi6IPVBowdab3zojGMHG7WX9t+kIwy5CzYuFri1PiZjie1EOeTaPHYrvDxZDsjxmlwueVEI0Wf
        wN1MDyIl9e8zvNsZ/RBdCZObGhZiiydfE/w369UPQgr+bvkCsJ3TchczA5aetTfebCHjNHLGl+7WM38F
        rDQ5g3nbEOr4vo4Cu4+bzwyWqr+5rcG3bDOsc3Wys1sFWPRizGJ05m58DdbBu3ceBjOyp+c1uGJVt2dB
        JTILDyBQtR+BI8fWcpPZw3+oseLPx56je4b6wesuH+pNV7QaXQXlr1C2sZw+e5BxjFNVeLiLro1/o8+X
        t/2v+iZMmF2Pcup/x/XTpl3+F+rkWWdXiE2RA8/CVfCU7XmJU+4dUv7W190pBfSRyZWv8/HWzyg5VPDX
        9w6Mjr88bHhH/v76VlfhUm3j/xd9GD5DU71//S7Y5uj2879mgCD8A84fqPpJ3U8PAAAAAElFTkSuQmCC
</value>
  </data>
</root>